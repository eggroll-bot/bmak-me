(this["webpackJsonppersonal-website"]=this["webpackJsonppersonal-website"]||[]).push([[0],Array(70).concat([function(t,e,a){},function(t,e,a){},,,,,,,,,,,,,,,,function(t,e,a){},,,,,,,,,,,,,,,function(t,e,a){},function(t,e,a){},,,,,,,,function(t,e,a){var i={"./anticheat/image1.jpg":112,"./anticrash/a_showcase_video.mp4":113,"./anticrash/image1.jpg":114,"./auto_body_npc/a_showcase_video.mp4":115,"./auto_body_npc/image1.jpg":116,"./auto_body_npc/image2.jpg":117,"./bmak_xyz/image1.jpg":118,"./easydental_vixwin_bridge/a_showcase_video.mp4":119,"./easydental_vixwin_bridge/image1.png":120,"./easydental_vixwin_bridge/image2.jpg":121,"./hamming_codes/a_showcase_video.mp4":122,"./hamming_codes/image1.png":123,"./hamming_codes/image2.png":124,"./hamming_codes/image3.png":125,"./huffman_coding/a_showcase_video.mp4":126,"./huffman_coding/image1.png":127,"./huffman_coding/image2.png":128,"./huffman_coding/image3.png":129,"./programmers_calculator/a_showcase_video.mp4":130,"./programmers_calculator/image1.png":131,"./programmers_calculator/image2.png":132,"./programmers_calculator/image3.png":133,"./programmers_calculator/image4.png":134,"./sorting_algorithms/a_showcase_video.mp4":135,"./sorting_algorithms/image1.png":136,"./sorting_algorithms/image2.png":137,"./sorting_algorithms/image3.png":138,"./sorting_algorithms/image4.png":139,"./sorting_algorithms/image5.png":140,"./sorting_algorithms/image6.png":141,"./sorting_algorithms/image7.png":142,"./vixwin_intraoral/a_showcase_video.mp4":143,"./vixwin_intraoral/image1.jpg":144};function n(t){var e=r(t);return a(e)}function r(t){if(!a.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}n.keys=function(){return Object.keys(i)},n.resolve=r,t.exports=n,n.id=111},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.d3b703f9.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.749916c0.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.1212d9c3.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.b33fe5d8.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.a69f91ad.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.6e51fdff.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.3828d4fc.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.9fc766cd.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.e40792ff.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.cd1a95ee.jpg"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.cb826536.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.93cd97a9.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.efde9a2a.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image3.64b48009.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.e137e14f.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.24905364.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.8921e24f.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image3.8196413c.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.3efcca72.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.e602b1ac.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.c100b9a5.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image3.6d34a3e7.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image4.c96cc226.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.c327320d.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.3b2bf4c2.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image2.1958f8e2.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image3.aa2c5212.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image4.09786469.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image5.193a433f.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image6.f974b30f.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image7.8cbcc1cc.png"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/a_showcase_video.90b84e81.mp4"},function(t,e,a){"use strict";a.r(e),e.default=a.p+"static/media/image1.c0a142f5.jpg"},function(t,e,a){"use strict";a.r(e);var i=a(0),n=a.n(i),r=a(22),o=a.n(r),s=(a(70),a(71),a(57)),c=a(173),d=a(12),l=a(50),h=a(7),m=a(174),g=(a(87),a(39)),u=a(2);function p(t){return Object(g.b)(t,{stiffness:275,damping:25})}var f=function(t){var e={atEnter:{opacity:0},atLeave:{opacity:p(0)},atActive:{opacity:p(1)}};return Object(u.jsx)(g.a,{atActive:e.atActive,atEnter:e.atEnter,atLeave:e.atLeave,className:"switch-wrapper",children:t.children})},b=(a(102),a(175)),y=a(177),j=a(148),w=a(162),v=a(165),x=a(166),O=a.p+"static/media/pfp.3a12a2d8.png",_=a(163),k=a(164),I=a(167),T=a(168),C=a(11);var M=function(){return document.title="\ud83c\udfe0 Home",Object(u.jsxs)("div",{className:"Home",children:[Object(u.jsx)(b.a,{mb:3,children:Object(u.jsx)(y.a,{alt:"Eggroll Profile Picture",className:"avatar",src:O})}),Object(u.jsxs)(b.a,{mb:3,children:[Object(u.jsx)(j.a,{gutterBottom:!0,align:"center",style:{fontWeight:800},variant:"h2",children:"\ud83d\udc4b Hey, I'm Brian."}),Object(u.jsxs)(j.a,{gutterBottom:!0,align:"center",variant:"h4",children:["Here is my\xa0",Object(u.jsxs)(w.a,{href:"https://github.com/eggroll-bot",rel:"noopener noreferrer",style:{color:"#FF845B"},target:"_blank",children:[Object(u.jsx)(_.a,{})," GitHub"]}),"\xa0and\xa0",Object(u.jsxs)(w.a,{color:"secondary",href:"https://www.linkedin.com/in/brian-mak/",rel:"noopener noreferrer",target:"_blank",children:[Object(u.jsx)(k.a,{})," LinkedIn"]}),"."]})]}),Object(u.jsxs)(v.a,{container:!0,justifyContent:"center",spacing:5,children:[Object(u.jsx)(v.a,{item:!0,children:Object(u.jsx)(C.a,{style:{textDecoration:"none"},to:"/about-me",children:Object(u.jsx)(x.a,{color:"primary",size:"medium",startIcon:Object(u.jsx)(I.a,{}),variant:"outlined",children:"About Me"})})}),Object(u.jsx)(v.a,{item:!0,children:Object(u.jsx)(C.a,{style:{textDecoration:"none"},to:"/portfolio",children:Object(u.jsx)(x.a,{color:"primary",size:"medium",startIcon:Object(u.jsx)(T.a,{}),variant:"outlined",children:"Portfolio"})})})]})]})},P=a(169),A=n.a.createContext();var z=Object(h.g)((function(){var t=n.a.useContext(A);return Object(u.jsxs)(v.a,{container:!0,children:[Object(u.jsx)(v.a,{item:!0,xs:6,children:Object(u.jsx)("div",{style:{height:105,padding:"15px",paddingLeft:"30px"},children:Object(u.jsx)(j.a,{style:{alignItems:"center",display:"flex",fontSize:"24px",height:75},children:t?Object(u.jsx)(C.a,{to:t,children:"<- Back"}):Object(u.jsx)(C.a,{to:"/",children:"<- Home"})})})}),Object(u.jsx)(v.a,{item:!0,xs:6,children:Object(u.jsx)("div",{style:{float:"right",height:105,width:120,padding:"15px",paddingRight:"30px"},children:Object(u.jsx)(y.a,{alt:"Profile Picture",className:"avatar",src:O,style:{height:75,width:75}})})})]})}));var W=function(t){return document.title=t.title,Object(u.jsxs)("div",{style:{margin:"auto",maxWidth:"1200px"},children:[Object(u.jsx)(z,{}),Object(u.jsxs)("div",{style:{paddingLeft:"5%",paddingRight:"5%",paddingTop:"30px",paddingBottom:"30px"},children:[Object(u.jsx)(j.a,{align:"center",style:{fontWeight:800,paddingBottom:"40px"},variant:"h2",children:document.title}),t.children]})]})},H=Object(P.a)({bodyText:{fontSize:22,fontWeight:400,marginBottom:"24px",textAlign:"justify"}});var F=function(){var t=H(),e=["\n\t\tHello! Welcome to my website. I'm Brian Mak. I'm a student at the University of California, Santa Cruz majoring in computer science with plans\n\t\tto minor in technology and information management. I like to create open-source side projects in my free time, and have an interest in software\n\t\tdevelopment.\n\t\t","\n\t\tI also like to learn about and try out new technologies. Currently, I'm learning React. This website is my first project built in React. You can\n\t\tcheck out my most recent projects in my portfolio linked below.\n\t\t","\n\t\tIn the short term, before I get my bachelor's degree, I'm looking to land a software engineering internship. After I get my degree, I am\n\t\tconsidering either finding work in the software engineering industry or pursuing a master's degree in computer science.\n\t\t",Object(u.jsxs)(u.Fragment,{children:["Wanna see what I've been up to recently? Feel free to check out my portfolio. My portfolio and r\xe9sum\xe9 can be found\xa0",Object(u.jsx)(C.a,{to:"/portfolio",children:"here"}),"."]}),Object(u.jsxs)(u.Fragment,{children:["If you want to reach out to me, feel free to contact me by email at\xa0",Object(u.jsx)(w.a,{color:"secondary",href:"mailto:brian@bmak.xyz",children:"brian@bmak.xyz"}),"."]})];return Object(u.jsx)(W,{title:"\ud83d\udc4b About Me",children:e.map((function(e,a){return Object(u.jsx)(j.a,{align:"left",className:t.bodyText,children:e},a)}))})},S=(a(103),a(6)),B=a(56),E=a.n(B);var D=Object(S.a)((function(){return{bodyText:{fontSize:22,fontWeight:400,marginBottom:"24px",textAlign:"justify"}}}),{withTheme:!0})((function(t){var e,a=null===(e=t.media)||void 0===e?void 0:e.map((function(t){return"mp4"===t.match(/[^.]+$/)[0]?{original:t,renderItem:function(t){return Object(u.jsx)("video",{autoPlay:!0,loop:!0,muted:!0,playsInline:!0,src:t.original,style:{backgroundColor:"#262626",height:"450px",maxWidth:"100%"}})}}:{original:t}}));return Object(u.jsxs)(W,{title:t.title,children:[t.github&&Object(u.jsx)("div",{style:{paddingBottom:"40px",textAlign:"center"},children:Object(u.jsx)(x.a,{color:"primary",href:t.github,rel:"noopener noreferrer",size:"medium",startIcon:Object(u.jsx)(_.a,{}),target:"_blank",variant:"outlined",children:"Visit GitHub Repository"})}),t.media&&Object(u.jsx)("div",{style:{paddingBottom:"40px"},children:Object(u.jsx)(E.a,{items:a,showFullscreenButton:!1,showPlayButton:!1,showThumbnails:!1})}),t.paragraphs.map((function(e,a){return Object(u.jsx)(j.a,{align:"left",className:t.classes.bodyText,children:e},a)}))]})})),q=a(150),V=a(170),G=a(178),R=a(171),L=a(172),N=Object(q.a)({img:{objectFit:"cover"}})(V.a);var U=function(t){return Object(u.jsx)(C.a,{style:{textDecoration:"none"},to:t.path,children:Object(u.jsx)(G.a,{variant:"outlined",children:Object(u.jsxs)(R.a,{disableTouchRipple:!0,children:[t.cover?Object(u.jsx)(N,{component:"img",src:t.image,style:{height:t.height||"100%",width:t.width||"100%"}}):Object(u.jsx)(V.a,{component:"img",src:t.image,style:{height:t.height||"100%",width:t.width||"100%"}}),Object(u.jsx)(L.a,{children:Object(u.jsx)(j.a,{align:"center",children:t.text})})]})})})},J=[{name:"\ud83e\uddee Programmer's Calculator",media:"programmers_calculator",image:"image1.png",cover:!1,gallery:!0,url:"programmers-calculator",github:"https://github.com/eggroll-bot/programmers-calculator",paragraphs:["\n\t\t\tProject start date: June 2021\n\t\t\t","\n\t\t\tThis project is a calculator that contains features specifically designed for programmers, such as bitwise shifts, bitwise rotations, and\n\t\t\tbase conversions.\n\t\t\t","\n\t\t\tInternally, it uses a modified version of the shunting-yard algorithm to perform calculations. The modifications allow for it to support unary\n\t\t\toperators, and left-to-right associativity or right-to-left associativity. In addition, instead of converting to reverse Polish notation and\n\t\t\tthen evaluating, the program will begin to perform intermediate calculations as it encounters them.\n\t\t\t","\n\t\t\tThis project was created using React and Electron. For the UI components in the calculator, I used the Material-UI library.\n\t\t\t",Object(u.jsxs)(u.Fragment,{children:["There is also a web version available\xa0",Object(u.jsx)(w.a,{color:"secondary",href:"https://progcalc.bmak.xyz/",target:"_blank",children:"here"}),"; however, due to the use of BigInt, it may not work in older browsers or browsers that do not support the use of BigInt."]})]},{name:"\ud83c\udf10 bmak.xyz",media:"bmak_xyz",image:"image1.jpg",cover:!0,gallery:!1,url:"bmak-xyz",github:"https://github.com/eggroll-bot/personal-website",paragraphs:["\n\t\t\tProject start date: June 2021\n\t\t\t","\n\t\t\tThis website is my first project created with React. When I started this project, I hadn't used JavaScript in about 4 years, so I had to\n\t\t\tpractically re-learn the language, in addition to learning React's features. Learning the basics of React wasn't that difficult because the\n\t\t\tdocumentation for React is fairly detailed. I used the Material-UI library for the UI components in this website. Material-UI also has\n\t\t\tdetailed documentation, so that made it easy to learn.\n\t\t\t","\n\t\t\tOverall, I'm fairly happy with how this website turned out. I will definitely be creating more React projects down the line.\n\t\t\t"]},{name:"\ud83d\udddc\ufe0f Huffman Coding",media:"huffman_coding",image:"image3.png",cover:!1,gallery:!0,url:"huffman-coding",github:"https://github.com/eggroll-bot/huffman-coding",paragraphs:["\n\t\t\tProject start date: May 2021\n\t\t\t","\n\t\t\tThis project was originally created for a Computer Systems and C Programming class (CSE 13S) at UC Santa Cruz, and has since been improved.\n\t\t\tFor this project, I created a Huffman encoder and decoder. The encoder and decoder programs read from and write to stdin and stdout by\n\t\t\tdefault, but alternatively, they can also read from and write to files specified by command-line arguments.\n\t\t\t","\n\t\t\tThe encoded file format contains a file header, a post-order Huffman tree dump, and codes for each of the symbols present in the original\n\t\t\tfile. The file header contains a magic number, the size of the Huffman tree dump, and the size of the original file. The file header is\n\t\t\talways read and written in little-endian byte ordering, so it is safe to use across architectures with different endiannesses.\n\t\t\t","\n\t\t\tThe Huffman encoder and decoder uses the read( ) and write( ) system calls to perform reads and writes. The encoder uses a priority queue\n\t\t\tADT to construct a Huffman tree and the decoder uses a stack ADT to rebuild the Huffman tree from the dump in the encoded output.\n\t\t\t","\n\t\t\tImplementing the priority queue ADT was a good learning experience because it was the first time I had implemented one. I originally was\n\t\t\tgoing to use a min-heap to implement it, but I figured that it would probably be more complicated than inserting into an ordered array.\n\t\t\tGiven that the priority queue would only contain a maximum of 256 elements (one for each ASCII character), the implementation method I\n\t\t\tchose for the priority queue would not make a significant performance difference.\n\t\t\t"]},{name:"\u267e\ufe0f Hamming Codes",media:"hamming_codes",image:"image3.png",cover:!1,gallery:!0,url:"hamming-codes",github:"https://github.com/eggroll-bot/hamming-codes",paragraphs:["\n\t\t\tProject start date: May 2021\n\t\t\t","\n\t\t\tThis project was originally created for a Computer Systems and C Programming class (CSE 13S) at UC Santa Cruz, and has since been improved.\n\t\t\tFor this project, I created two Hamming encoders and decoders. The encoder and decoder programs read from and write to stdin and stdout by\n\t\t\tdefault, but alternatively, they can also read from and write to files specified by command-line arguments.\n\t\t\t","\n\t\t\tThe first Hamming encoder and decoder uses matrix multiplication to encode and decode Hamming codes. This Hamming encoder and decoder requires\n\t\t\tthe use of the bit vector and bit matrix ADT, and also uses memoization to speed up encoding and decoding. The second Hamming encoder and\n\t\t\tdecoder uses lookup tables to encode and decode Hamming codes. The lookup tables used were generated using the matrix multiplication Hamming\n\t\t\tencoder and decoder.\n\t\t\t","\n\t\t\tThe encoders will read one byte at a time, and outputs two Hamming(8, 4) codes for each byte read. The decoders will read two bytes at a\n\t\t\ttime, and outputs the decoded byte. If a correctable error is found, the error will be corrected before the byte is outputted. If an\n\t\t\tuncorrectable error is found, a null character will be outputted. Statistics for errors found can be viewed with a flag in the decoders.\n\t\t\t"]},{name:"\ud83d\udd00 Sorting Algorithms",media:"sorting_algorithms",image:"image2.png",cover:!0,gallery:!0,url:"sorting-algorithms",github:"https://github.com/eggroll-bot/sorting-algorithms",paragraphs:["\n\t\t\tProject start date: April 2021\n\t\t\t","\n\t\t\tThis project was originally created for a Computer Systems and C Programming class (CSE 13S) at UC Santa Cruz, and has since been improved.\n\t\t\tFor this project, I created a program that compares statistics of various sorting algorithms. Right now, the program is able to run bubble\n\t\t\tsort, shell sort with the Ciura gap sequence, shell sort with the Pratt gap sequence, recursive quicksort, quicksort with a stack, and\n\t\t\tquicksort with a queue.\n\t\t\t","\n\t\t\tThis program runs sorting algorithms as directed by command-line arguments and outputs the sorted array as well as the number of elements\n\t\t\tsorted, number of moves performed, number of compares performed, and the max stack/queue size for the quicksort stack/queue implementations.\n\t\t\t"]},{name:"\ud83c\udf09 Easy Dental VixWin Bridge",media:"easydental_vixwin_bridge",image:"image2.jpg",cover:!0,gallery:!0,url:"easydental-vixwin-bridge",github:"https://github.com/eggroll-bot/easydental-vixwin-bridge",paragraphs:["\n\t\t\tProject start date: December 2020\n\t\t\t","\n\t\t\tThis project was created to bridge the Easy Dental practice management software and VixWin, a dental imaging program. VixWin ships with\n\t\t\ta bridge called VxLink that bridges Easy Dental and VixWin, but the bridge is very buggy and crashes a lot. This project was created to\n\t\t\treplace that bridge.\n\t\t\t","\n\t\t\tRight now, the program has the same workflow as VxLink. The program should be opened on startup, and will remain in the tray. When the tray\n\t\t\ticon is clicked, the program will grab the currently selected patient in Easy Dental and launches VixWin with the correct patient.\n\t\t\t","\n\t\t\tInternally, when the tray icon is clicked, the program will query the registry to find the patient ID of the currently selected patient.\n\t\t\tFrom there, once it has the patient ID, it will query the Easy Dental database using the ODBC interface exposed by the database. This is\n\t\t\tdone to retrieve the first name, middle initial, and last name of the patient, which will be displayed inside of VixWin. After the full\n\t\t\tname is retrieved, VixWin will be launched with the appropriate flags to open the correct patient.\n\t\t\t","\n\t\t\tFiguring out the internal workings of Easy Dental and VixWin for this project was not an easy task and ended up taking quite a bit of time\n\t\t\tto figure out because there is no public technical documentation for these two programs.\n\t\t\t"]},{name:"\ud83d\udcf7 VixWin Intraoral Camera Integration",media:"vixwin_intraoral",image:"image1.jpg",cover:!0,gallery:!0,url:"vixwin-intraoral-camera-integration",github:"https://github.com/eggroll-bot/vixwin-intraoral-camera-integration",paragraphs:["\n\t\t\tProject start date: November 2020\n\t\t\t","\n\t\t\tThis project was created to allow for the use of intraoral cameras with VixWin, a dental imaging program. VixWin ships with the AMCap program,\n\t\t\twhich allows intraoral cameras to be used with VixWin, but the program freezes and crashes often. In addition, it has no support for physical\n\t\t\tshutter buttons. This project was created to replace that program.\n\t\t\t","\n\t\t\tWhen the program is opened, a tray icon and a window will appear. The tray icon's menu can be used to configure which video device to use.\n\t\t\tThe video device's moniker string (unique identifier) is stored into a file, so the selected device saves across sessions. The window that\n\t\t\tappears shows a preview of the selected video device and also has a capture button. If the capture button is clicked, the image is saved\n\t\t\tin the VixWin database. If the video device has a shutter button, that can be used to capture as well.\n\t\t\t","\n\t\t\tFiguring out how VixWin worked internally to get this done was somewhat challenging because there is no public technical documentation for\n\t\t\tthe program, but in the end, I was able to figure out how it worked and it seems to work fairly well.\n\t\t\t"]},{name:"\ud83c\udfce\ufe0f Garry's Mod - Auto Body NPC",media:"auto_body_npc",image:"image1.jpg",cover:!0,gallery:!0,url:"auto-body-npc",github:"https://github.com/eggroll-bot/auto-body-npc",paragraphs:["\n\t\t\tProject start date: December 2019\n\t\t\t","\n\t\t\tThis project was created to improve vehicle customization in a sandbox game called Garry's Mod. Garry's Mod is a game that has a singleplayer\n\t\t\tmode and a multiplayer mode. The multiplayer mode consists of game servers hosted by independent server owners. This addon targets the\n\t\t\tmultiplayer mode.\n\t\t\t","\n\t\t\tGarry's Mod has very little vehicle customization options by default in a roleplaying game server. This addon changes that by adding the\n\t\t\tability to upgrade engines, change the color of vehicles, change the skin of vehicles, change the bodygroups of vehicles (customize look\n\t\t\tof certain parts), and add underglow to vehicles. Each upgrade costs a certain amount of in-game currency, of which the amount is configurable\n\t\t\tby the game server owner.\n\t\t\t"]},{name:"\ud83d\udeab Garry's Mod - Anticheat",media:"anticheat",image:"image1.jpg",cover:!0,gallery:!0,url:"anticheat",paragraphs:["\n\t\t\tProject start date: November 2017\n\t\t\t","\n\t\t\tThis project was created to prevent cheating in a sandbox game called Garry's Mod. Garry's Mod is a game that has a singleplayer mode and\n\t\t\ta multiplayer mode. The multiplayer mode consists of game servers hosted by independent server owners. This addon targets the multiplayer\n\t\t\tmode.\n\t\t\t","\n\t\t\tGarry's Mod servers tend to have quite a few cheaters, specifically those with aimbot (automatic aiming at targets), x-ray (seeing through\n\t\t\tbarriers), etc. This addon aims to prevent cheating on servers. For this addon, I created a rudimentary obfuscator that obfuscates Lua\n\t\t\tcode. The obfuscator is used on the clientside portion of the anticheat because the clientside portion of addons gets sent to the player.\n\t\t\t","\n\t\t\tNot obfuscating the clientside portion of the anticheat creates a risk of someone reverse-engineering the anticheat and finding out how to\n\t\t\tbypass it. Although the obfuscator I created was not that advanced, it was sufficient to prevent most people from reverse-engineering it.\n\t\t\t"]},{name:"\ud83d\udca5 Garry's Mod - Anticrash",media:"anticrash",image:"image1.jpg",cover:!0,gallery:!0,url:"anticrash",paragraphs:["\n\t\t\tProject start date: August 2017\n\t\t\t","\n\t\t\tThis project was created to reduce server lag and the number of server crashes in a sandbox game called Garry's Mod. Garry's Mod is a game\n\t\t\tthat has a singleplayer mode and a multiplayer mode. The multiplayer mode consists of game servers hosted by independent server owners.\n\t\t\tThis addon targets the multiplayer mode.\n\t\t\t","\n\t\t\tGarry's Mod servers are very prone to crashes. The majority of server crashes are caused by spawning too many items (prop spam). Prop spam\n\t\t\tcauses lags and sometimes crashes a server when there are too many physics calculations for the server to handle. Sometimes, prop spam is\n\t\t\taccidental, and other times it is done intentionally by bad actors.\n\t\t\t","\n\t\t\tThis addon aims to reduce the number of server crashes by preventing these collisions from occuring in the first place. When props are\n\t\t\tunfrozen, this addon will prevent the prop from colliding with other props. When props are frozen, the addon will restore the ability to\n\t\t\tcollide with other props. Trusted players can be given a certain tag that will allow them to bypass this, in case it poses an inconvenience\n\t\t\tto them when building structures.\n\t\t\t"]}],Y={},$=a(111);$.keys().forEach((function(t){var e=t.substring(2).match(/[^/]+/g),a=e[0],i=e[1];Y[a]=Y[a]||{},Y[a][i]=$(t).default}));var K=function(t){return Object(u.jsxs)(h.c,{children:[J.map((function(e,a){return Object(u.jsx)(h.a,{path:t.match.url+"/"+e.url,children:Object(u.jsx)(A.Provider,{value:t.match.url,children:Object(u.jsx)(D,{github:e.github,media:e.gallery?Object.values(Y[e.media]):null,paragraphs:e.paragraphs,title:e.name})})},a)})),Object(u.jsx)(h.a,{path:t.match.url,children:Object(u.jsxs)(W,{title:"\ud83e\udd16 Portfolio",children:[Object(u.jsxs)(j.a,{align:"center",style:{paddingBottom:"40px"},variant:"h4",children:["My r\xe9sum\xe9 can be found ",Object(u.jsx)(w.a,{color:"secondary",href:"/resume.pdf",target:"_blank",children:"here"}),"."]}),Object(u.jsx)(v.a,{container:!0,justifyContent:"center",spacing:2,children:J.map((function(e,a){return Object(u.jsx)(v.a,{item:!0,style:{width:512},children:Object(u.jsx)(U,{cover:e.cover,height:"288px",image:Y[e.media][e.image],path:t.match.url+"/"+e.url,text:e.name})},a)}))})]})})]})},Q=Object(s.a)({palette:{background:{default:"#1A1A1A",paper:"#2E2E2E"},primary:{main:"#FFF640"},secondary:{main:"#FF9B48"},type:"dark"},typography:{fontFamily:'"Raleway", sans-serif'},overrides:{MuiAvatar:{root:{height:"100px",width:"100px"}},MuiCardContent:{root:{backgroundColor:"#262626"}},MuiCardMedia:{img:{objectFit:"contain"}},MuiLink:{underlineHover:{textDecoration:"underline solid transparent"}}}}),X={restorePageStateOnPop:!1};var Z=function(){var t=Object(d.b)();return Object(l.wrapHistory)(t,X),Object(u.jsx)(h.b,{history:t,children:Object(u.jsxs)(c.a,{theme:Q,children:[Object(u.jsx)(m.a,{}),Object(u.jsxs)(f,{children:[Object(u.jsx)(h.a,{component:F,path:"/about-me"}),Object(u.jsx)(h.a,{component:K,path:"/portfolio"}),Object(u.jsx)(h.a,{component:M,path:"/"})]})]})})};o.a.render(Object(u.jsx)(n.a.StrictMode,{children:Object(u.jsx)(Z,{})}),document.getElementById("root"))}]),[[145,1,2]]]);
//# sourceMappingURL=main.68acfda8.chunk.js.map